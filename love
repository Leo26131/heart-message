<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>For Arathi</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: #fff0f6;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
            overflow: hidden;
            -webkit-tap-highlight-color: transparent;
        }

        .heart-container {
            position: relative;
            width: 150px;
            height: 150px;
            cursor: pointer;
            animation: pulse 1s infinite;
            z-index: 1000;
        }

        .heart {
            position: absolute;
            width: 100%;
            height: 100%;
            background: #ff4d6d;
            transform: rotate(45deg);
            border-radius: 30px;
            box-shadow: 0 0 20px #ff4d6d;
        }

        .heart:before,
        .heart:after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: #ff4d6d;
            border-radius: 50%;
            box-shadow: 0 0 20px #ff4d6d;
        }

        .heart:before {
            left: -50%;
        }

        .heart:after {
            top: -50%;
        }

        .heart-text {
            position: absolute;
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            transform: rotate(-45deg);
            color: white;
            font-size: 20px;
            font-weight: bold;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
            z-index: 1;
        }

        .message {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 255, 255, 0.95);
            padding: 15px 25px;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(255, 77, 109, 0.3);
            text-align: center;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.5s ease;
            z-index: 1000;
            width: 85%;
            max-width: 300px;
        }

        .message.show {
            opacity: 1;
            animation: messagePop 0.5s ease-out;
        }

        .message h2 {
            color: #ff4d6d;
            margin: 0 0 10px 0;
            font-size: 20px;
        }

        .message p {
            color: #666;
            margin: 0;
            font-size: 16px;
            line-height: 1.4;
        }

        .rain-heart {
            position: fixed;
            color: #ff4d6d;
            animation: rainFall 3s linear infinite;
            z-index: 999;
            pointer-events: none;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        @keyframes pop {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.5); opacity: 0.5; }
            100% { transform: scale(0); opacity: 0; }
        }

        @keyframes messagePop {
            0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
            50% { transform: translate(-50%, -50%) scale(1.1); opacity: 0.8; }
            100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
        }

        @keyframes rainFall {
            0% {
                transform: translateY(-50px) rotate(0deg) scale(1);
                opacity: 1;
            }
            100% {
                transform: translateY(100vh) rotate(360deg) scale(0.8);
                opacity: 0;
            }
        }

        @keyframes heartPop {
            0% { transform: scale(1); }
            50% { transform: scale(1.5); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body>
    <div class="heart-container" id="heart-container">
        <div class="heart"></div>
        <div class="heart-text">ARATHI</div>
    </div>

    <div class="message" id="message">
        <h2>To My Dearest Arathi</h2>
        <p>Every time I see your smile, my heart dances with joy ‚ú®<br>
           Your love lights up my world üíù<br>
           You are my everything, Arathi üíñ</p>
    </div>
    <script>
    const heartContainer = document.getElementById('heart-container');
    const message = document.getElementById('message');
    let isPopped = false;
    let rainInterval;

    function createHeart(x, y) {
        const heart = document.createElement('div');
        heart.className = 'rain-heart';
        heart.innerHTML = '‚ô•';
        heart.style.fontSize = (Math.random() * 15 + 10) + 'px';
        heart.style.left = x + 'px';
        heart.style.top = y + 'px';
        document.body.appendChild(heart);

        heart.addEventListener('animationend', () => {
            heart.remove();
        });
    }

    function handleInteraction(e) {
        if (!isPopped) {
            isPopped = true;
            heartContainer.style.animation = 'pop 0.5s forwards';

            // Initial shower at the pop point
            const x = e.clientX || (e.touches && e.touches[0].clientX) || (window.innerWidth/2);
            const y = e.clientY || (e.touches && e.touches[0].clientY) || (window.innerHeight/2);
            for(let i = 0; i < 50; i++) {
                setTimeout(() => {
                    createHeart(
                        x + (Math.random() - 0.5) * 200,
                        y + (Math.random() - 0.5) * 200
                    );
                }, i * 50);
            }

            // Show message
            setTimeout(() => {
                message.classList.add('show');

                // Start rain across the whole screen
                rainInterval = setInterval(() => {
                    for(let i = 0; i < 10; i++) {
                        const randX = Math.random() * window.innerWidth;
                        createHeart(randX, -50);
                    }
                }, 250);
            }, 1000);

            setTimeout(() => {
                heartContainer.style.display = 'none';
            }, 500);
        }
    }

    // Add both click and touch events
    heartContainer.addEventListener('click', handleInteraction);
    heartContainer.addEventListener('touchstart', handleInteraction);

    // Prevent default touch behaviors, but don't block links before pop
    document.addEventListener('touchmove', function(e) {
        e.preventDefault();
    }, { passive: false });

    </script>
    </body>
</html> 
